buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

repositories {
    maven {
        name = "tterrag maven"
        url = "http://maven.tterrag.com/"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven { url = "http://dvs1.progwml6.com/files/maven" }
    maven { url = "http://dogforce-games.com/maven" }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

version = "${config.version}-${config.build_number}"
group= "necro.convenientfoundation"
archivesBaseName = "ConvenientFoundation-${config.mc_version}"

dependencies {
    compile files(
            "mod_libs/Baubles-${config.baubles_version}-api.jar"
    )
    compile "mezz.jei:jei_${config.jei_version}:api"
    runtime "mezz.jei:jei_${config.jei_version}"
    /*compile "mcjty.theoneprobe:TheOneProbe-1.12:${config.oneprobe_version}:api"
    runtime "mcjty.theoneprobe:TheOneProbe-1.12:${config.oneprobe_version}"
    deobfCompile "gigaherz.guidebook:Guidebook-${config.guidebook_version}"*/
}

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "run"

    mappings = config.mc_mappings

    replace 'GRADLE:BUILD', config.build_number
    replace 'GRADLE:VERSION', config.version
    replaceIn 'LibMod.java'
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': config.mc_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def parseConfig(File cfg) {
    cfg.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

jar {
    classifier = ''
}

/*
Keep this in mind for potential CA2 + CF jar


plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

reobf {
    shadowJar { mappingType = 'SEARGE' }
}

shadowJar {
    classifier = ''
    dependencies {
        include(dependency(':Commons-1.12.0:'))
    }
    relocate 'gigaherz.common', "${group}.shadow.common"
}
*/

artifacts {
    archives jar
    archives sourceJar
}

//idea { module { inheritOutputDirs = true } }
tasks.publish.dependsOn build
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.archivesBaseName
            from components.java

            artifact jar
            artifact sourceJar
        }
    }

    repositories {
        maven {
            url "$projectDir/build/libs/maven"
        }
    }
}