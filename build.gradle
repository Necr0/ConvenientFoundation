buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

repositories {
    maven {
        name = "tterrag maven"
        url = "http://maven.tterrag.com/"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven { url = "http://dvs1.progwml6.com/files/maven" }
    maven { url = "http://dogforce-games.com/maven" }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

project.version = "$project.mc_version-$project.version"
project.group= project.mod_group
project.archivesBaseName = project.mod_name

dependencies {
    compile files(
            "mod_libs/Baubles-${project.baubles_version}-api.jar"
    )
    compile "mezz.jei:jei_${project.jei_version}:api"
    runtime "mezz.jei:jei_${project.jei_version}"
    /*compile "mcjty.theoneprobe:TheOneProbe-1.12:${project.oneprobe_version}:api"
    runtime "mcjty.theoneprobe:TheOneProbe-1.12:${project.oneprobe_version}"
    deobfCompile "gigaherz.guidebook:Guidebook-${project.guidebook_version}"*/
}

minecraft {
    version = "${project.mc_version}-${project.forge_version}"
    runDir = "run"

    mappings = project.mc_mappings

    replace 'GRADLE:BUILD', project.build_number
    replace 'GRADLE:VERSION', project.version
    replaceIn 'LibMod.java'
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.mc_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
    from sourceSets.api.allJava
}

Properties authCredentials = new Properties()
if(file("$project.rootDir/$project.credentialsPath").exists() ){
    InputStream stream = new FileInputStream("$project.rootDir/$project.credentialsPath")
    authCredentials.load(stream)
    stream.close()
}

publishing {
    tasks.publish.dependsOn 'build'
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url = "https://nexus.necro-development.net/repository/maven-releases/"
            credentials {
                username authCredentials.username
                password authCredentials.password
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = project.mod_group
            artifactId = project.mod_artifactId
            version = version

            from components.java
            artifact sourcesJar
        }
    }
}
